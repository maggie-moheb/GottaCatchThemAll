import java.util.ArrayList;

import javax.lang.model.element.QualifiedNameable;

public class SearchGeneral {
	public Node General_Search(Problem problem, QING_FUN qing_fun) {
		State initial_state = problem.initialState; 
		Node root = new Node(); 
		root.MakeNode(initial_state);
		ArrayList<Node> nodes = new ArrayList<>();
		nodes.add(root);
		while(true) {
			if (nodes.size() == 0) return null; 
			Node front = nodes.remove(0);
			if (problem.passGoalTest(front.state)) return front;
			ArrayList<Node> children = problem.expand(front);
			
		}
		return null;
	}
	// Qing function for different algorithms 
	public ArrayList<Node> GeneralQingFunc(QING_FUN algorithm, ArrayList<Node> nodesSoFar,ArrayList<Node> nodesExpanded) {
		if(algorithm == QING_FUN.UCS) UniformCostSearchQing(nodesSoFar, nodesExpanded);
	}
	// Qing function for uniform cost search
	public ArrayList<Node> UniformCostSearchQing(ArrayList<Node> nodes, ArrayList<Node> newNode) {
		return null; 
	}
}

